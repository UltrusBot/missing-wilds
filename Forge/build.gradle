buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
plugins {
    id "com.github.breadmoirai.github-release" version "2.4.1"
    id "com.modrinth.minotaur" version "2.+"
    id 'me.hypherionmc.cursegradle' version '2.0.1'
}
apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'
apply from: 'https://raw.githubusercontent.com/UltrusBot/GradleScripts/61556de3c834075f02353af9c9c55462c6f8bea0/release.gradle'


jarJar.enable()

archivesBaseName = "${mod_name}-forge-${minecraft_version}"

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
    config "${mod_id}.forge.mixins.json"
}

repositories {
    maven {
        name = 'jitpack'
        url = "https://jitpack.io"
    }
    maven {
        url = "https://api.modrinth.com/maven"
    }
}


minecraft {
    mappings channel: 'official', version: minecraft_version

    if (project.hasProperty('forge_ats_enabled') && project.findProperty('forge_ats_enabled').toBoolean()) {
        // This location is hardcoded in Forge and can not be changed.
        // https://github.com/MinecraftForge/MinecraftForge/blob/be1698bb1554f9c8fa2f58e32b9ab70bc4385e60/fmlloader/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModFile.java#L123
        accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
        project.logger.debug('Forge Access Transformers are enabled for this project.')
    }

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            args "-mixin.config=${mod_id}.mixins.json", "-mixin.config=${mod_id}.forge.mixins.json"
            mods {
                modClientRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            args "-mixin.config=${mod_id}.mixins.json", "-mixin.config=${mod_id}.forge.mixins.json"
            mods {
                modServerRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'
            args "-mixin.config=${mod_id}.mixins.json", "-mixin.config=${mod_id}.forge.mixins.json"
            mods {
                modDataRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft libs.forge
    compileOnly project(":Common")
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    implementation fg.deobf(libs.brrp.get())
//    implementation fg.deobf(libs.midnightlib.forge.get())
    implementation fg.deobf(libs.defaultresources.forge.get())
    jarJar("io.github.lukebemish.defaultresources:defaultresources-forge-1.19.2:[0.3.0,)")

}
tasks.build.dependsOn tasks.jarJar
tasks.jarJar.archiveClassifier.set("");
reobf {
    jarJar {}
}
tasks.jarJar.finalizedBy("reobfJarJar")
tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}
tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

var mod = createModReleaseMetadata(
        "Missing Wilds v1.2.0+1.19.2 Beta 2 - Forge",
        file("$rootDir/CHANGELOG.md"),
        ["1.19.2"],
        ["forge"],
        "jar",
        ["sourcesJar", "javadocJar"],
        "v${project.version}+${project.minecraft_version}-forge",
        project.testRelease.toBoolean(),
        project.releaseType
)
modrinthInfo(mod, "missing-wilds")
githubInfo(mod, "UltrusBot", "missing-wilds", "1.19")
curseforgeInfo(mod, "634277")


processResources {
    from project(":Common").sourceSets.main.resources

    filesMatching('*.mixins.json') {
        expand "refmap_target": "${mod_id}."
    }
    from(rootProject.rootDir.absolutePath + "/ModCompat") {
        into "defaultresources"
    }
    exclude '.cache'
}


jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}