import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
    id "com.github.breadmoirai.github-release" version "2.4.1"
    id "com.modrinth.minotaur" version "2.+"
    id 'net.darkhax.curseforgegradle' version '1.1.15'
}
apply from: "https://raw.githubusercontent.com/UltrusBot/GradleScripts/${project.upload_script_version}/release.gradle"

archivesBaseName = "${mod_name}-fabric-${minecraft_version}"
repositories {
    maven{ url "https://jitpack.io"}
    maven{ url "https://ueaj.dev/maven"}
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
        content {
            includeGroup("dev.emi")
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    minecraft(libs.minecraft)
    mappings(loom.officialMojangMappings())
    modImplementation(libs.fabric.loader)
    modImplementation(libs.fabric.api)
    implementation(project(":Common"))
    modImplementation(libs.arrp)
    modImplementation("maven.modrinth:templates-2:2.0.4-fabric-1.20.1");

//    modImplementation(libs.emi) //TODO 1.20
}

loom {
    accessWidenerPath = file("src/main/resources/missingwilds.accesswidener")
    mixin {
        defaultRefmapName = "${mod_id}.refmap.json"
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
        datagenCommon {
            client()
            setConfigName("Fabric Datagen Common")
            vmArg("-Dmw.common=true")
            vmArg("-Dfabric-api.datagen")
            vmArg("-Dfabric-api.datagen.output-dir=${file("../Common/src/generated/resources")}")
            vmArg("-Dfabric-api.datagen.modid=${mod_id}")
            runDir = "build/datagen"
        }
    }
}

var mod = createModReleaseMetadata(
        "Missing Wilds v1.2.0+1.20 Beta 5 - Fabric",
        file("$rootDir/CHANGELOG.md"),
        ["1.20.1", "1.20"],
        ["fabric"],
        "remapJar",
        ["sourcesJar", "javadocJar"],
        "v${project.version}+${project.minecraft_version}-fabric",
        project.testRelease.toBoolean(),
        project.releaseType
)
modrinthInfo(mod, "missing-wilds", ["fabric-api"], ["arrp"])
githubInfo(mod, "UltrusBot", "missing-wilds", "1.20")
curseforgeInfo(mod, TaskPublishCurseForge, "622590", [], ["fabric-api"])

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
    exclude '.cache'
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

jar {
    from("LICENSE") {
        rename { "${it}_${mod_name}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
                    artifactId project.archivesBaseName
                    version project.version
                    from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}